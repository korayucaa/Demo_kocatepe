<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>